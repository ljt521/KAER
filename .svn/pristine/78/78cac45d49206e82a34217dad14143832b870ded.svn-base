<!--作者：莫岭红 功能：会诊量-->
<template>
  <div class="co-vo">
    <div class="divBox" >
      <swipeout>
        <swipeout-item transition-mode="follow"  v-for="(item,i) of list" :key="i">
          <div slot="right-menu">
            <swipeout-button type="primary" @click.native="onButtonClick(item)">编辑</swipeout-button>
            <swipeout-button type="warn" @click.native="deleteData(item.id)">删除</swipeout-button>
          </div>
          <div slot="content" >
            <cell >
            <span slot="title" >
              <span class="spanCell">{{item.year}}：</span>
              <div-span class="leftData" :dictCode="'SSJS'" :dictItemCode="item.roleInConsultation "></div-span>
              <span class="rightData">{{item.consultationVevolume}}</span>
              <i></i>
            </span>
            </cell>
          </div>
        </swipeout-item>
      </swipeout>
      <div class="cardFootIcon vux-1px-t"  v-on:click="goNewConsultation">
        <p><x-icon class="x-icon" type="ios-plus-outline" size="20"></x-icon> 新建会诊量</p>
      </div>
    </div>

  </div>
</template>
<script>
  export default {
    name: 'ConsultationVolume',
    data () {
      return {
        list:[]
      }
    },
    created(){
      this.requestData()
    },
    props:['personId'],
    methods: {
      requestData(){
        this.$get('/api/consultation',{customerId:this.personId}).then( val => {
          this.list = val;
        }).catch( err => {})
      },
      goNewConsultation() {
        this.$router.push('/new-consultation/'+this.personId)
      },
      onButtonClick(e) {
          this.$router.push({
            name:"NewConsultation",
            params:{
              title: '编辑会诊量',
              data:e
            }
          });
      },
      deleteData(id){
        let that = this
        this.$vux.confirm.show({
          title: '操作提醒',
          content: '是否确认删除?',
          onConfirm () {
            that.$del('/api/consultation/'+id).then( val => {
              that.$vux.toast.text('删除成功', 'middle');
              that.requestData();
            }).catch( err => {
              that.$vux.toast.text('删除失败', 'middle');

            })
            console.log('plugin confirm')
          }
        })
      },

    }
  }
</script>
<style lang="less" >
  .co-vo{
    background-color: white;
    margin: 0 15px;
    border-radius:  0 0 5px 5px;;
    box-shadow: 0 0 2px 2px #eee;
    font-size: 13px;
    text-align: left;
    .divBox{
      .spanCell{
        color:#A4A4A4;
      }
      .leftData{
        margin-left: 22px;
        color:#282828;
      }
      .rightData{
        margin-left: 22px;
        color:#282828;
      }

      i:after {
        content: " ";
        display: inline-block;
        height: 6px;
        width: 6px;
        position: absolute;
        border-width: 2px 2px 0 0;
        border-color: #C8C8CD;
        border-style: solid;
        transform: matrix(0.71, 0.71, -0.71, 0.71, 0, 0);
        margin-top: -11px;
        right: 5px;
        margin-right: 15px;
      }

    }
    .vux-1px-t{
      &:before{
        border-color: #DDDDDD;
      }
    }

    .cardFootIcon{
      height: 35px;
      line-height: 38px;
      p {
        text-align: center;
        color: #074089;
      }
      .x-icon {
        position: relative;
        top: 4px;
        fill: #074089;
      }
    }
  }


</style>
