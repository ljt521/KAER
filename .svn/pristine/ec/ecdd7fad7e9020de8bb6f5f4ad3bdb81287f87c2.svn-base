<!--作者：莫岭红 功能：新建（编辑）会诊-->
<template>
  <div v-wechat-title="title" class="newConsul">
    <div v-if="!switchTab">
      <div class="dy-top">
        <x-header class="x-header" slot="header" :left-options="{backText: ''}">{{title}}<a slot="right"
                                                                                            @click="goEssentialInfo()">完成</a>
        </x-header>
      </div>
      <div class="backgroundStyle">
        <datetime v-model="crInfo.consultationDate" title="会诊日期" placeholder="请选择"></datetime>
        <div-selector :tilteValue="'手术名称'" :dictCode="'SSMC'"
                      v-on:listenSelect="(value) => {crInfo.operationName = value.code}"
                      :anyData="crInfo.operationName" :is-type="codeValue" required></div-selector>
        <div-selector :tilteValue="'手术中角色'" :dictCode="'SSJS'"
                      v-on:listenSelect="(value) => {crInfo.operativeRole = value.code}"
                      :anyData="crInfo.operativeRole" :is-type="codeValue" required></div-selector>
        <div v-if="crInfo.operativeRole === 'SSJS05'">
          <x-input type="text" placeholder="请填写" v-model="crInfo.operativeRoleOther" :is-type="codeValue"
                   text-align="right" required></x-input>
        </div>
        <cell @click.native="selectHos()" title="会诊地点" :value="crInfo.addressName" is-link></cell>
        <cell
          title="产品信息"
          :border-intent="false">
        </cell>
        <div>

          <cell v-for="(item,i) of list" :key="i">
            <check-icon slot="icon" :value.sync="item['select']" type="plain" @click.native="getPlain(item)">
              {{item.value}}
            </check-icon>
            <template v-slot="value">
              <div class="new-select">
                <div-selector :placeholder="'请选择品牌'" :dictCode="'CPPP'" v-model="item['proData']"
                              v-on:listenSelect="(value) => {item['proData'] = value.code;item['select'] = true;getPlain(item);}"
                              :anyData="item.proData" :is-type="codeValue" required></div-selector>
              </div>
            </template>
          </cell>
        </div>

      </div>
    </div>

    <!--医院信息-->
    <div class="location" v-if="switchTab">
      <div class="search">
        <search-box v-bind:black="true" @on-black="blackClick" @on-search="searClick" @on-enter="enterBtn"
                    @on-change="searchChange"></search-box>
        <div class="locationTab">
          <div class="filter">
            <div-selector :placeholder="'区域'" :anyData="address.regionalValue" v-bind:dictCode="'QY'"
                          v-on:listenSelect="regionalChange"></div-selector>
          </div>
          <div class="filter">
            <div-selector :placeholder="'省'" v-bind:anyData="address.province" v-bind:option='address.provinceOption'
                          v-on:listenSelect="provinceChange"></div-selector>
          </div>
          <div class="filter">
            <div-selector :placeholder="'市'" v-bind:anyData="address.city" v-bind:option='address.cityOption'
                          v-on:listenSelect="cityChange"></div-selector>
          </div>
          <div class="filter">
            <div-selector :placeholder="'区'" v-bind:anyData="address.area" v-bind:option='address.areaOption'
                          v-on:listenSelect="areaChange"></div-selector>
          </div>
        </div>
      </div>
      <div class="hospitalInfo">
        <scroller height="-40" lock-x @on-scroll-bottom="getMorHospital" ref="scrollerBottom"
                  :scroll-bottom-offst="20">
          <div>
            <div class="info" v-for="item of hcoList" :key="item.id" @click="getHospital(item)">
              <h3>{{item.hcoName}}</h3>
              <span>{{item.newGrade}}</span>
              <span>{{item.newType}}</span>
            </div>
            <load-more v-if="onFetching" tip="loading"></load-more>
          </div>
        </scroller>
      </div>
    </div>
  </div>
</template>
<script>
  import {ChinaAddressData, XInput} from 'vux'

  export default {
    name: 'NewConsulInfo',
    data() {
      return {
        codeValue: function (value) {
          return {
            valid: value !== '' || null,
          }
        },
        sumData: 0,
        sumSize: 10,
        title: '新建会诊',
        demo1: false,
        list: [],
        hcoList: [],
        ppData: '', // 品牌code
        addressData: ChinaAddressData,
        switchTab: false,
        address: {
          regionalValue: '',
          provinceOption: [],
          province: '',
          cityOption: [],
          city: '',
          areaOption: [],
          area: '',
        },
        crInfo: {
          consultationDate: '',// 会诊日期
          operationName: '',// 手术名称
          operativeRole: '',// 手术中的角色
          operativeRoleOther: '',//手术中的其他角色
          operationLocal: '',// 手术地点
          productInfo: [], //产品信息
          customerId: '',// 所属客户
          addressName: '',// 手术地点
        },
        searchData: '',
        onFetching: false,
        allFlag: false,
        codeValue: function (value) {
          return {
            valid: value != '' || null,
          }
        }
      }
    },
    created() {
      if (this.$route.params.data) {
        this.crInfo.consultationDate = this.$route.params.data.consultationDate.slice(0, 10)
        this.crInfo.customerId = this.$route.params.data.customerId
        this.crInfo.operationLocal = this.$route.params.data.operationLocal
        this.crInfo.operationName = this.$route.params.data.operationName
        this.crInfo.addressName = this.getData()
        this.crInfo.operativeRole = this.$route.params.data.operativeRole
        this.crInfo.operativeRoleOther = this.$route.params.data.operativeRoleOther
        this.crInfo.productInfo = JSON.parse(this.$route.params.data.productInfo)
        this.crInfo['id'] = this.$route.params.data.id
      }
    },
    mounted() {
      this.title = this.$route.params.title || this.$route.meta.title
      if (this.$route.params) {
        this.crInfo.customerId = this.$route.params.id
      }
      this.$get('/api/customer/getDictItemList', {dictKey: 'CPXX'}).then((info) => {
        this.list = info
        this.list.forEach(val => {
          let data = this.$route.params.data.product
          for (let i in data[0]) {
            if (val.code === data[0][i]) {
              val['select'] = true
              val['proData'] = data[1][i]
            }
          }
        })
      }).catch(error => {
      })

      this.$get('/api/hospital', {page: 0, size: 10}).then((info) => {
        this.hcoList = info
        this.sumData = this.$headers['x-total-count']
      })
    },
    methods: {
      getPlain(e) {
        if (e.hasOwnProperty('proData')) {
          if (e.select && e.proData) {
            const obj = {}
            obj[e.code] = e.proData
            this.crInfo.productInfo.forEach((item, index) => {
              if (item[e.code]) {
                this.crInfo.productInfo.splice(index, 1)
              }
            })
            this.crInfo.productInfo.push(obj)
          } else {
            if (this.crInfo.productInfo.length > 0) {
              this.crInfo.productInfo.forEach((item, index) => {
                if (item[e.code]) {
                  this.crInfo.productInfo.splice(index, 1)
                }
              })
            }
          }
        } else {
          e.select = false
        }
        this.list = JSON.parse(JSON.stringify(this.list))
      },
      goEssentialInfo() {
        for (let key in this.crInfo) {
          switch (key) {
            case 'consultationDate':
              if (this.crInfo[key] === '' || null) {
                this.$vux.toast.text('会诊日期不能为空', 'middle')
                return
              }
              break
            case 'operationName':
              if (this.crInfo[key] === '' || null) {
                this.$vux.toast.text('手术名称不能为空', 'middle')
                return
              }
              break
            case 'operationLocal':
              if (this.crInfo[key] === '' || null) {
                this.$vux.toast.text('会诊地点不能为空', 'middle')
                return
              }
              break
            case 'operativeRole':
              if (this.crInfo[key] === '' || null) {
                this.$vux.toast.text('手术中的角色不能为空', 'middle')
                return
              }
              break
            case 'operativeRoleOther':
              if (this.crInfo.operativeRole == 'SSJS05') {
                if (this.crInfo[key] === '' || null) {
                  this.$vux.toast.text('手术中的角色其他不能为空', 'middle')
                  return
                }
              }
          }
        }
        if (this.title === '编辑会诊') {
          this.crInfo.productInfo = JSON.stringify(this.crInfo.productInfo)
          this.$put('/api/Consultation', this.crInfo).then(info => {
            this.$vux.toast.text('编辑会诊成功', 'middle')
            this.$router.push(`/userInfo/${this.crInfo.customerId }/follow-details/${this.crInfo.customerId }`)
          }).catch(error => {
            this.$vux.toast.text('编辑会诊失败', 'middle')
          })
        } else if (this.title === '新建会诊') {
          this.crInfo.productInfo = JSON.stringify(this.crInfo.productInfo)
          this.$post('/api/Consultation', this.crInfo).then(info => {
            this.$vux.toast.text('新建会诊成功', 'middle')
            this.$router.push(`/userInfo/${this.crInfo.customerId }/follow-details/${this.crInfo.customerId }`)
          }).catch(error => {
            this.$vux.toast.text('新建会诊失败', 'middle')
          })
        }
      },
      getData() {

        this.$get('/api/hospital/' + this.crInfo.operationLocal).then(info => {
          this.crInfo.addressName = info.hcoName
        })
      },
      getHospital(e) {
        this.crInfo.operationLocal = e.hcoCode
        this.getData()
        this.switchTab = false
      },
      selectHos() {
        this.switchTab = true
      },
      /*区域*/
      regionalChange(e) {
        this.sumSize = 10
        this.address.regionalValue = e.code
        this.$post('/api/hospital/cascadeInfo', {regionCode: e.code}).then(info => {
          this.address.provinceOption = info
          this.address.province = ''
          this.address.city = ''
          this.address.cityOption = ''
          this.address.area = ''
          this.address.areaOption = ''
          this.address = JSON.parse(JSON.stringify(this.address))
        })
        this.$search('/api/hospital', {page: 0, size: 10}, {regionCode: e.code}).then((info) => {
          this.hcoList = info
          this.sumData = this.$headers['x-total-count']
        })

      },
      /*省份*/
      provinceChange(e) {
        this.sumSize = 10
        this.address.province = e.code
        this.$post('/api/hospital/cascadeInfo', {
          regionCode: this.address.regionalValue,
          provinceCode: e.code
        }).then(info => {
          this.address.cityOption = info
          this.address.city = ''
          this.address.area = ''
          this.address.areaOption = ''
        })
        this.$search('/api/hospital', {page: 0, size: 10}, {
          regionCode: this.address.regionalValue,
          provinceCode: e.code
        }).then((info) => {
          this.hcoList = info
          this.sumData = this.$headers['x-total-count']
        })
      },
      /*市*/
      cityChange(e) {
        this.sumSize = 10
        this.address.city = e.code
        this.$post('/api/hospital/cascadeInfo', {
          regionCode: this.address.regionalValue,
          provinceCode: this.address.province,
          cityCode: e.code
        }).then(info => {
          this.address.areaOption = info
          this.address.area = ''
        })
        this.$search('/api/hospital', {page: 0, size: 10},
          {
            regionCode: this.address.regionalValue,
            provinceCode: this.address.province,
            cityCode: e.code
          }).then((info) => {
          this.hcoList = info
          this.sumData = this.$headers['x-total-count']
        })
      },
      /*区*/
      areaChange(e) {
        this.sumSize = 10
        this.address.area = e.code
        this.$search('/api/hospital', {page: 0, size: 10},
          {
            regionCode: this.address.regionalValue,
            provinceCode: this.address.province,
            cityCode: this.address.city,
            countyCode: e.code
          }).then((info) => {
          this.hcoList = info
          this.sumData = this.$headers['x-total-count']
        })
      },
      /*获取更多*/
      getMorHospital() {
        if (this.allFlag) {
          this.onFetching = false
          return
        }
        if (this.onFetching) {
          // this.$vux.toast.text('', 'middle')
        } else {
          this.onFetching = true
          setTimeout(() => {
            this.sumSize = this.sumSize + 10
            this.$nextTick(() => {
              this.$refs.scrollerBottom.reset()
            })
            let obj = {
              regionCode: this.address.regionalValue || undefined,
              provinceCode: this.address.province || undefined,
              cityCode: this.address.city || undefined,
              countyCode: this.address.area || undefined,
              hcoName: this.searchData || undefined,
            }
            obj = JSON.parse(JSON.stringify(obj))
            this.$search('/api/hospital', {page: 0, size: this.sumSize}, obj).then((info) => {
              this.hcoList = info
              this.sumData = this.$headers['x-total-count']
              if (this.sumSize > this.sumData) {
                this.$vux.toast.text('已获取全部', 'middle')
                this.allFlag = true
                return
              }
              if (this.sumData == 0) {
                this.$vux.toast.text('无动态', 'middle')
                return
              }
              this.onFetching = false
            })
          }, 2000)
        }
      },
      keywordSearch(e) {
        this.searchData = e
        let obj = {
          regionCode: this.address.regionalValue || undefined,
          provinceCode: this.address.province || undefined,
          cityCode: this.address.city || undefined,
          countyCode: this.address.area || undefined,
          hcoName: this.searchData || undefined,
        }
        obj = JSON.parse(JSON.stringify(obj))
        this.$search('/api/hospital', {page: 0, size: 10}, obj).then((info) => {
          this.hcoList = info
          this.sumSize = 10
          this.sumData = this.$headers['x-total-count'];
        })
      },
      searClick(e) {
        this.keywordSearch(e)
      },
      enterBtn(e) {
        this.keywordSearch(e)
      },
      searchChange(e) {
        if (e == null || e == '') {
          this.keywordSearch(e)
        }
      },
      blackClick(e) {
        if (e) {
          this.switchTab = false
        }
      }
    },
    beforeRouteLeave(to, from, next) {
      if (!to.params.id) {
        to.params.title = '全部会诊信息'
        to.params.id = this.crInfo.customerId
      }
      next()
    },
  }
</script>
<style lang="less">
  .newConsul {
    .dy-top {
      .x-header {
        .left-arrow:before {
          width: 10px;
          height: 10px;
        }
        h1 {
          font-size: 18px;
          font-weight: 400;
          color: rgba(255, 255, 255, 1);
        }
        .vux-header-right {
          a {
            margin-right: 16px;
            font-size: 15px;
            font-weight: 400;
            color: rgba(255, 255, 255, 1);
          }
        }
      }
    }
    .cellBox {
      height: 20px;
    }
    .backgroundStyle {
      font-size: 13px;
      a.weui-cell {
        padding: 0 5px 0 0;
        div:first-child {
          padding-left: 16px;
          p {
            padding: 13px 0;
            font-weight: 400;
            color: rgba(0, 0, 0, 1);
          }
        }

      }
      div.vux-tap-active {
        padding: 0 5px 0 0;
        .vux-cell-primary {
          p {
            padding: 14px 0 14px 16px;

          }
        }

      }
      div.weui-cell_select {
        padding: 0;
        div.weui-cell__hd {
          padding: 14px 0 14px 16px;
          label.weui-label {
            width: 190px;
          }
        }
      }
      div.vux-cell-box {
        div.weui-cell_access {
          div.weui-cell__hd {
            padding: 14px 0 14px 16px;

          }

        }
      }
    }
    .weui-cell_access .weui-cell__ft {
      padding-right: 25px;
      &:after {
        right: 10px;
      }
    }
    .location {
      .search {
        position: fixed;
        width: 100%;
        top: 0;
        z-index: 99;
        height: 80px;
        .weui-search-bar__form {
          border-radius: 50%;
        }
        .weui-search-bar {
          padding: 4px 10px;
        }
        .weui-search-bar__input {
          padding: 5px 2px !important;
        }
        .weui-search-bar {
          background-color: #073f89;
        }
        .weui-search-bar__label {
          top: 5px;
        }
      }
      .locationTab {
        position: fixed;
        top: 40px;
        background-color: #fff;
        width: 100%;
        .filter {
          display: inline-block;
          background-color: #fff;
          float: left;
          width: 25%;
          .vux-selector.weui-cell_select-after {
            background-color: #fff;
            height: 35px;
          }
          .weui-label {
            width: 70px;
          }
        }
      }
      .hospitalInfo {
        text-align: left;
        margin-top: 90px;
        background: #fff;
        .info {
          border-bottom: 1px solid #D9D9D9;
          padding: 5px 15px;
          font-size: 12px;
          h3 {
            margin: 5px 0;
          }
          span {
            display: inline-block;
            color: #999;
            margin-right: 20px;
          }
        }
      }
    }
  }

  .weui-label {
    width: 80px !important;
  }

  .new-select {
    height: 0;
    position: relative;
    top: -20px;
  }

  .weui-icon-success-circle {
    font-size: 18px;
  }

  .weui-icon-circle {
    font-size: 18px;
  }
</style>
