<template>
  <div class="us-top">
    <x-header @on-click-back="goToBack" :left-options="{backText: '',preventGoBack: true}"></x-header>
    <div class="us-img">
    </div>
    <div class="us-z-top">
      <div style="position: relative;">
        <img v-if="customerDto.headImg"  class="us-img-1" :src="baseUrl + customerDto.headImg" alt="">
        <img v-if="!customerDto.headImg" class="us-img-1" src="../assets/image/default_head.png" alt="">
        <label class="img-up" for="female">img</label>
        <input ref="female" type="file" @change="loadImg" id="female" accept="image/*" class="addBorder">
      </div>
      <div class="us-care" @click="careData">
        <div class="us-center" v-if="customerDto.isFocusOn=='0'">
          <img src="../assets/image/client_details_follow.png" alt=""><span>关注</span>
        </div>
        <div class="us-center" v-if="customerDto.isFocusOn == '1'">
          <img src="../assets/image/client_details_follow_s.png" alt=""><span style="color: #FFB532"> 已关注</span>
        </div>
      </div>
      <h2 style="font-size:16px;margin: -45px 0 5px 0">{{customerDto.name}}</h2>
      <p style="margin-top:5px;text-align: center">
        <div-span v-bind:dictCode="'KSLX'" v-bind:dictItemCode="customerDto.deptCode"></div-span>
        <div-span style="font-size: 13px;" v-bind:dictCode="'ZW'"
                  v-bind:dictItemCode="customerDto.administrative"></div-span>
        <div-span style="font-size: 13px" v-bind:dictCode="'ZC'" v-bind:dictItemCode="customerDto.title"></div-span>
      </p>
      <p style="font-size:13px;margin: 5px 0 0px 0;text-align: center; color: #888888;">
        <hos-span v-bind:code="customerDto.hospitalCode"></hos-span>
      </p>
      <div style="height: 15px;margin-bottom: 15px" class="vux-1px-b"></div>

      <grid :show-lr-borders="false" :show-vertical-dividers="false">
        <grid-item :link="{ path: '/userInfo/'+id+'/essential-info/'+id}" @on-item-click="onItemClick(1)">
          <img style="width: 22px;height: 22px;" slot="icon" src="../assets/image/client_details_basic_data.png">
          <span slot="label" class="user-span" :class="{'user-span-index':tabIndex == 1}">基本资料</span>
        </grid-item>
        <grid-item :link="{ path: '/userInfo/'+id+'/growth-archives/'+id}" @on-item-click="onItemClick(2)">
          <img style="width: 22px;height: 22px;" slot="icon" src="../assets/image/client_details_growth_archives.png">
          <span slot="label" class="user-span" :class="{'user-span-index':tabIndex == 2}">成长档案</span>
        </grid-item>
        <grid-item :link="{ path: '/userInfo/'+id+'/follow-details/'+id}" @on-item-click="onItemClick(3)">
          <img style="width: 22px;height: 22px;" slot="icon" src="../assets/image/client_details_follow_up.png">
          <span slot="label" class="user-span" :class="{'user-span-index':tabIndex == 3}">跟进详情</span>
        </grid-item>
        <grid-item :link="{ path: '/userInfo/'+id+'/dynamic-assembly/'+id}" @on-item-click="onItemClick(4)">
          <img style="width: 22px;height: 22px;" slot="icon" src="../assets/image/client_details_dynamic.png">
          <span slot="label" class="user-span" :class="{'user-span-index':tabIndex == 4}">动态</span>
        </grid-item>
      </grid>
    </div>

    <div class="us-bottom-common">
      <router-view></router-view>
    </div>
  </div>

</template>

<script>
  import {Grid, GridItem} from 'vux'

  export default {
    name: 'UserInfo',
    components: {
      Grid,
      GridItem
    },
    data () {
      return {
        care: true,
        myConcernsCustomerDto: {
          customerId: this.$route.params.id,
          isFocusOn: 1
        },
        id: this.$route.params.id,
        customerDto: {},
        imgSrc: '',
        tabIndex: 1,
        url: '',
        baseUrl: this.$baseURL,
      }
    },
    created () {
      this.getCustomer(this.id)
    },
    methods: {
      careData () {
        this.customerDto.isFocusOn = !this.customerDto.isFocusOn;
        if (this.customerDto.isFocusOn) {/*关注*/
          this.$post('/api/myconcernscustomer', this.myConcernsCustomerDto).then(info => {
            this.$vux.toast.text('关注成功', 'middle')
          }).catch(error => {
            this.$vux.toast.text('取消关注', 'middle')
          })
          this.myConcernsCustomerDto.isFocusOn = 1;
        } else {/*取消关注*/
          this.$post('/api/myconcernscustomer/delMyConcernsCustomer', this.myConcernsCustomerDto).then(info => {
            this.$vux.toast.text('取消关注成功', 'middle')
          }).catch(error => {
            this.$vux.toast.text('取消关注成功', 'middle')
          })
          this.myConcernsCustomerDto.isFocusOn = 0;
        }

      },
      goToBack () {
        this.$router.push({
          path: '/customer'
        })
      },
      getCustomer (id) {
        this.$get('/api/customer/' + id).then(info => {
          this.customerDto = info
          this.imgSrc = this.customerDto.headImg
          console.log(info);
        })
      },
      loadImg (e) {
        //获取文件
        const file = this.$refs.female.files
        let size = Math.floor(file[0].size / 1024)
        //文件大小超出5M给出提示并且停止方法运行
        if (size > 5 * 1024 * 1024) {
          this.$vux.toast.text('请选择5M以内的图片', 'middle')
          return false
        }

        let format = 'png,jpg,jpeg';
        let fileSufName = file[0].name.substring(file[0].name.lastIndexOf('.') + 1);
        if (format.indexOf(fileSufName) == -1) {
          return false;
        }
        //判断文件长度不能为0
        if (file.length !== 0) {
          const imageData = new FormData()
          imageData.append('file', e.target.files[0])
          this.$post('/api/file/change-head', imageData, 'header').then(info => {
            this.customerDto.headImg = info.url // info.url 返回的路径//
            // 应该 获取当前操作用户信息 把url 放进去 再提交到数据库
            this.imgSrc = info.url
            this.$post('/api/customer/uploadHeadImg', this.customerDto).then(info => {

            }).catch(error => {
              console.log(error)
            })
            const reader = new FileReader()
            reader.readAsDataURL(e.target.files[0]) // 读出 base64
            /*读取过程中，没有出现异常时*/
            reader.onloadend = () => {
              const dataURL = reader.result//base64
              this.imgSrc = dataURL
            }
          })
        }
      },
      onItemClick (value) {
        this.tabIndex = value;
      }
    }
  }
</script>

<style lang="less">
  .us-top {
    .vux-header, .us-img {
      background-color: #074089;
    }
    .us-img {
      position: relative;
      height: 140px;
      top: -1px;
    }
    .us-z-top {
      margin: 0 15px -100px;
      position: relative;
      top: -120px;
      background-color: #fff;
      border-radius: 5px;
      .vux-1px-b {
        &:after {
          border-bottom: 1px solid #DDDDDD;
          left: 18px;
          right: 18px;
        }
      }
      .us-img-1 {
        position: relative;
        top: -45px;
        width: 75px;
        height: 75px;
        border-radius: 50%;
      }
      .addBorder {
        opacity: 0;
        /*filter: alpha(opacity=0);*/
        height: 100px;
        width: 100px;
        z-index: 9;
        position: absolute;
        left: 50%;
        transform: translate(-50%, 0);
        opacity: 0;
      }
      .img-up {
        display: inline-block;
        position: absolute;
        width: 60px;
        height: 60px;
        background-color: pink;
        top: -40px;
        transform: translate(-110%, 0);
        opacity: 0;
      }
      .us-care {
        width: 67px;
        height: 30px;
        position: absolute;
        top: 11px;
        right: -3px;
        border-top-left-radius: 15px;
        border-bottom-left-radius: 15px;
        background: #F2F3F5;
        text-align: center;
        font-size: 13px;
        color: #A4A4A4;
        .us-center {
          margin-top: 4px;
          img {
            vertical-align: top;
            height: 15px;
            margin-left: 5px;
          }
        }

      }
      .weui-grid {
        padding: 0;
      }
      .weui-grids::before {
        border: none;
      }
      .weui-grid::after {
        content: none;
      }
      .weui-grid {
        text-decoration: none;
      }
      .weui-grid__label {
        padding-bottom: 10px;
      }
    }
    .us-bottom-common {
      position: relative;
      top: -10px;
      .scrollable .vux-tab-item {
        flex: 0 0 20%;
      }
    }
    .user-span {
      color: #888888;
      font-size: 13px;
    }
    .user-span-index {
      color: #000;
      font-size: 13px;
    }
  }
</style>
