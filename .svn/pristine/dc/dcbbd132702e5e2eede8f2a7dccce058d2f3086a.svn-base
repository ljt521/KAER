<!--学会职务-->
<template>
  <div class="academic">
    <swipeout class="vux-1px-tb">
      <swipeout-item transition-mode="follow"  v-for="(item,i) of list" :key="i">
        <div slot="right-menu">
          <swipeout-button type="primary" @click.native="onButtonClick(item)">编辑</swipeout-button>
          <swipeout-button type="warn" @click.native="deleteData(item.id)">删除</swipeout-button>
        </div>
        <div slot="content" :class="{'vux-1px-b': i !== 3}" >
          <cell is-link>
            <span slot="title" class="content">
              <div-span class="spanCell" :dictCode="'XHMC'" :dictItemCode="item.academyName"></div-span>：
              <div-span class="leftSpan1" :dictCode="'XHZW'" :dictItemCode="item.position"></div-span>
              <div-span class="leftSpan2" :dictCode="'XHJB'" :dictItemCode="item.academyLevel "></div-span>
            </span>
          </cell>
        </div>
      </swipeout-item>
    </swipeout>
    <div class="cardFootIcon"  v-on:click="goAacdemicTeam">
      <p><x-icon class="x-icon" type="ios-plus-outline" size="20"></x-icon> 新建学术团队</p>
    </div>
  </div>
</template>
<script>
  export default {
    name: 'AcademicDuty',
    data () {
      return {
        list: [],
      }
    },
    props:['personId'],
    created(){
      this.requestData()
    },
    methods:{
      requestData(){
        this.$get('/api/academicteam',{customerId:this.personId}).then((val) => {
          this.list = val
        }).catch( err => {})
      },
      goAacdemicTeam(){
        this.$router.push({
          path: '/academic-team/'+this.personId
        })
      },
      onButtonClick(e) {
          this.$router.push({
            name:"AcademicTeam",
            params:{
              title: '编辑学术团队',
              data:e
            }
          });
      },
      deleteData(id){
        let that = this
        this.$vux.confirm.show({
          title: '操作提醒',
          content: '是否确认删除?',
          onConfirm () {
            that.$del('/api/academicteam/'+ id).then( val => {
              that.requestData()
            }).catch( err => {})

          }
        })
      },

    }
  }
</script>
<style lang="less" >
  .academic{
    background-color: white;
    margin: 0 15px;
    padding-bottom: 10px;
    font-size: 13px;
    text-align: left;
    .vux-label{
      .content{
        .spanCell{
          min-width: 45px;
        }
        .leftSpan1{
          color:#282828 ;
          position: absolute;
          left: 85px;
        }
        .leftSpan2{
          color:#282828 ;
          position: absolute;
          left: 220px;
        }
      }
    }
    .cardFootIcon{
      height: 35px;
      line-height: 45px;
      p {
        font-size: 14px;
        text-align: center;
        color: #074089;
      }
      .x-icon {
        position: relative;
        top: 4px;
        fill: #074089;
      }
    }
  }
</style>
